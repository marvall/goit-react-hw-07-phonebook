{"version":3,"sources":["components/Filter.module.scss","components/ContactList/Contact.module.scss","components/ContactList/ContactList.module.scss","redux/contacts/contacts-actions.js","api/api.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm.jsx","components/Filter.jsx","components/ContactList/Contact.jsx","components/ContactList/ContactList.jsx","App.js","redux/contacts/contacts-reducer.js","redux/store/store.js","index.js","components/ContactForm.module.scss"],"names":["module","exports","contactAddRequest","createAction","contactAddSuccess","contactAddError","contactGetRequest","contactGetSuccess","contactGetError","contactDeleteRequest","contactDeleteSuccess","contactDeleteError","contactFiletr","axios","defaults","baseURL","contactAdd","contact","dispatch","actions","post","then","data","catch","error","api","message","contactGet","get","contactDelete","contactId","delete","getContactsItems","state","contacts","items","getContactsLoading","loading","getfilteredContacts","createSelector","filter","name","includes","connect","selectors","addContact","number","useState","setName","setNumber","handleChange","event","currentTarget","value","reset","onSubmit","preventDefault","console","log","contactName","contactExist","forEach","toLowerCase","alert","isContactExist","className","Style","form","label","input","type","onChange","placeholder","button","filterContact","filterQuery","setQuery","String","deleteContact","id","currentID","onClick","useDispatch","useEffect","contacrList","map","App","contactReducer","createReducer","_","action","payload","contactFilterReducer","combineReducers","rootReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b86c3ec4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__14XU7\",\"input\":\"Filter_input__2M2dV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__2oPcl\",\"button\":\"Contact_button__3aWVR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacrList\":\"ContactList_contacrList__olD4f\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const contactAddRequest = createAction(\"contact/addRequest\");\r\nexport const contactAddSuccess = createAction(\"contact/addSuccess\");\r\nexport const contactAddError = createAction(\"contact/addError\");\r\n\r\nexport const contactGetRequest = createAction(\"contact/getRequest\");\r\nexport const contactGetSuccess = createAction(\"contact/getSuccess\");\r\nexport const contactGetError = createAction(\"contact/getError\");\r\n\r\nexport const contactDeleteRequest = createAction(\"contact/deleteRequest\");\r\nexport const contactDeleteSuccess = createAction(\"contact/deleteSuccess\");\r\nexport const contactDeleteError = createAction(\"contact/deleteError\");\r\n\r\nexport const contactFiletr = createAction(\"contact/filter\");\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3050\";\r\n\r\nexport const getContact = () => {\r\n  return axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => data)\r\n    .catch((error) => error);\r\n};\r\nexport const addContact = (contact) => {\r\n  return axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => data)\r\n    .catch((error) => error);\r\n};\r\nexport const deleteContact = (contactId) => {\r\n  return axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(({ data }) => data)\r\n    .catch((error) => error);\r\n};\r\n// export const updateContact = (contactId, update) => {\r\n//   return axios\r\n//     .patch(`/contacts/${contactId}`, update)\r\n//     .then(({ data }) => data)\r\n//     .catch((error) => error);\r\n// };\r\n","import * as actions from \"./contacts-actions\";\r\nimport * as api from \"../../api/api\";\r\n\r\nexport const contactAdd = (contact) => (dispatch) => {\r\n  dispatch(actions.contactAddRequest());\r\n  api\r\n    .addContact(contact)\r\n    .then((data) => dispatch(actions.contactAddSuccess(data)))\r\n    .catch((error) => dispatch(actions.contactAddError(error.message)));\r\n};\r\n\r\nexport const contactGet = () => (dispatch) => {\r\n  dispatch(actions.contactGetRequest());\r\n  api\r\n    .getContact()\r\n    .then((data) => dispatch(actions.contactGetSuccess(data)))\r\n    .catch((error) => dispatch(actions.contactGetError(error.message)));\r\n};\r\n\r\nexport const contactDelete = (contactId) => (dispatch) => {\r\n  dispatch(actions.contactDeleteRequest());\r\n  api\r\n    .deleteContact(contactId)\r\n    .then(() => dispatch(actions.contactDeleteSuccess(contactId)))\r\n    .catch((error) => dispatch(actions.contactDeleteError(error.message)));\r\n};\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContactsItems = (state) => state.contacts.items;\r\nexport const getContactsFilter = (state) => state.contacts.filter;\r\nexport const getContactsLoading = (state) => state.contacts.loading;\r\n\r\nexport const getfilteredContacts = createSelector(\r\n  [getContactsFilter, getContactsItems],\r\n  (filter, items) => {\r\n    if (filter !== \"\") {\r\n      return items.filter(({ name }) => name.includes(filter));\r\n    } else {\r\n      return items;\r\n    }\r\n  }\r\n);\r\n","import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { contactAdd } from \"../redux/contacts/contacts-operations\";\r\nimport Style from \"./ContactForm.module.scss\";\r\nimport * as selectors from \"../redux/contacts/contacts-selectors\";\r\n\r\nconst isContactExist = (contactName, contacts) => {\r\n  let contactExist = true;\r\n\r\n  contacts.forEach(({ name }) => {\r\n    if (name.toLowerCase() === contactName.toLowerCase()) {\r\n      alert(`${contactName} is already in contacts`);\r\n      contactExist = false;\r\n    }\r\n  });\r\n\r\n  return contactExist;\r\n};\r\n\r\nfunction ContactForm({ items, addContact }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(items);\r\n    if (isContactExist(name, items)) {\r\n      addContact({ name, number });\r\n      reset();\r\n    }\r\n  };\r\n  const handleChange = (event) => {\r\n    if (event.currentTarget.name === \"name\") {\r\n      setName(event.currentTarget.value);\r\n    } else if (event.currentTarget.name === \"number\") {\r\n      setNumber(event.currentTarget.value);\r\n    }\r\n  };\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className={Style.form}>\r\n        <label className={Style.label}>\r\n          Name{\" \"}\r\n          <input\r\n            className={Style.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label className={Style.label}>\r\n          Number{\" \"}\r\n          <input\r\n            className={Style.input}\r\n            type=\"tel\"\r\n            placeholder=\"999-99-99\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={Style.button}>\r\n          add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: selectors.getContactsItems(state),\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addContact: ({ name, number }) => dispatch(contactAdd({ name, number })),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import Style from \"./Filter.module.scss\";\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { contactFiletr } from \"../redux/contacts/contacts-actions\";\r\n\r\nfunction Filter({ filterContact }) {\r\n  const [filterQuery, setQuery] = useState(\"\");\r\n  const handleChange = (event) => {\r\n    setQuery(event.currentTarget.value);\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    filterContact(String(filterQuery));\r\n  };\r\n  return (\r\n    <>\r\n      <form className={Style.form} onSubmit={handleSubmit}>\r\n        <label>\r\n          <h3>Find contacts by name:</h3>\r\n          <input\r\n            type=\"text\"\r\n            value={filterQuery}\r\n            onChange={handleChange}\r\n            className={Style.input}\r\n          />\r\n        </label>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    filterContact: (filter) => dispatch(contactFiletr(filter)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Style from \"./Contact.module.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { contactDelete } from \"../../redux/contacts/contacts-operations\";\r\n\r\nfunction Contact({ id, name, number, deleteContact }) {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [currentID, setID] = useState(id);\r\n  return (\r\n    <li id={id} className={Style.contact}>\r\n      <p>{name}</p>\r\n      <p>{number}</p>\r\n      <button className={Style.button} onClick={() => deleteContact(currentID)}>\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\nContact.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteContact: (id) => dispatch(contactDelete(id)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Contact);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport Style from \"./ContactList.module.scss\";\r\nimport * as selectors from \"../../redux/contacts/contacts-selectors\";\r\nimport { contactGet } from \"../../redux/contacts/contacts-operations\";\r\n\r\nfunction ContactList({ items, loading }) {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(contactGet());\r\n  }, []);\r\n\r\n  return (\r\n    <ul className={Style.contacrList}>\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        items.map((contact) => {\r\n          console.log(contact);\r\n          return (\r\n            <Contact\r\n              key={contact.id}\r\n              id={contact.id}\r\n              name={contact.name}\r\n              number={contact.number}\r\n            />\r\n          );\r\n        })\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: selectors.getfilteredContacts(state),\r\n    loading: selectors.getContactsLoading(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ContactList);\r\n","import ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nfunction App() {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\nexport default App;\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"./contacts-actions\";\r\n\r\nconst initialState = [];\r\nconst contactReducer = createReducer(initialState, {\r\n  [actions.contactGetSuccess]: (_, action) => action.payload,\r\n  [actions.contactAddSuccess]: (state, action) => [...state, action.payload],\r\n  [actions.contactDeleteSuccess]: (state, action) =>\r\n    state.filter((contact) => contact.id !== action.payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [actions.contactAddRequest]: () => true,\r\n  [actions.contactAddSuccess]: () => false,\r\n  [actions.contactAddError]: () => false,\r\n  [actions.contactGetRequest]: () => true,\r\n  [actions.contactGetSuccess]: () => false,\r\n  [actions.contactGetError]: () => false,\r\n});\r\n\r\nconst contactFilterReducer = createReducer(\"\", {\r\n  [actions.contactFiletr]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: contactReducer,\r\n  filter: contactFilterReducer,\r\n  loading,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport contactReducer from \"../contacts/contacts-reducer\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\n// const logger = (store) => (next) => (action) => {\r\n//   console.log(\"action:\", action);\r\n\r\n//   next(action);\r\n// };\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactReducer,\r\n});\r\n\r\nconst store = configureStore({ reducer: rootReducer });\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux/store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2_b40\",\"label\":\"ContactForm_label__u33zp\",\"input\":\"ContactForm_input__12YDv\",\"button\":\"ContactForm_button__1LArc\"};"],"sourceRoot":""}